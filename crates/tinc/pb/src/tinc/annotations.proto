syntax = "proto3";

package tinc;

import "google/protobuf/descriptor.proto";

extend google.protobuf.MessageOptions {
  SchemaMessageOptions message = 15501;
}

extend google.protobuf.FieldOptions {
  SchemaFieldOptions field = 15502;
  optional PredefinedConstraint predefined = 15508;
}

extend google.protobuf.EnumOptions {
  SchemaEnumOptions enum = 15503;
}

extend google.protobuf.EnumValueOptions {
  SchemaVariantOptions variant = 15504;
}

extend google.protobuf.MethodOptions {
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated HttpEndpointOptions http_endpoint = 15505;
}

extend google.protobuf.ServiceOptions {
  HttpRouterOptions http_router = 15506;
}

extend google.protobuf.OneofOptions {
  SchemaOneofOptions oneof = 15507;
}

message HttpRouterOptions {
  optional string prefix = 1;
}

enum RenameAll {
  // Normally we should have prefix'd enums however in input case
  // we want to allow for easier use by just saying `LOWER_CASE` instead
  // of `RENAME_ALL_LOWER_CASE`.
  // protolint:disable ENUM_FIELD_NAMES_PREFIX
  RENAME_ALL_UNSPECIFIED = 0;
  LOWER_CASE = 1;
  UPPER_CASE = 2;
  PASCAL_CASE = 3;
  CAMEL_CASE = 4;
  SNAKE_CASE = 5;
  SCREAMING_SNAKE_CASE = 6;
  KEBAB_CASE = 7;
  SCREAMING_KEBAB_CASE = 8;
}

message SchemaMessageOptions {
  optional bool generate = 1;
  optional RenameAll rename_all = 2;
  optional bool skip_validation = 101;

  //protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated CelExpression cel = 100;
}

enum Visibility {
  VISIBILITY_UNSPECIFIED = 0;
  SKIP = 1;
  INPUT_ONLY = 2;
  OUTPUT_ONLY = 3;
}

message PredefinedConstraint {
  //protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated CelExpression cel = 1;
  enum Type {
    TYPE_UNSPECIFIED = 0;
    WRAPPER_REPEATED_ITEM = 1;
    WRAPPER_MAP_KEY = 2;
    WRAPPER_MAP_VALUE = 3;
    CUSTOM_EXPRESSION = 4;
  }
  Type type = 2;
}

enum JsonOmittable {
  JSON_OMITTABLE_UNSPECIFIED = 0;
  TRUE = 1;
  FALSE = 2;
  TRUE_BUT_STILL_SERIALIZE = 3;
}

message SchemaFieldOptions {
  optional string rename = 1;

  // Deserialization:
  // This flag dictates how we handle fields which are
  // not provided in the json representation of the message.
  // If this is true, then no error will be returned
  // if the field is not provided.
  // If this is false then not providing a value for this field
  // will result in an error.
  // The default setting for this flag is `true` if the field
  // is marked as `optional` and `false` otherwise.
  // Meaning that optional fields can be omitted from the json
  // representation of the message without causing an error.
  //
  // Serialization:
  // This flag dictates if we should skip serializing the field
  // in the json representation of the message if the field
  // is equal to the default value for its type.
  // The default setting for this flag is `true` if the field
  // is marked as `optional` and `false` otherwise.
  // Meaning that optional fields will be omitted from the json
  // if they do not have a value.
  JsonOmittable json_omittable = 200;

  optional bool flatten = 205;
  optional Visibility visibility = 202;

  optional FieldConstraints constraint = 101;
}

message FloatConstraint {
  oneof greater {
    float gt = 1 [(predefined).cel = {
      message: "value must be greater than `{this}`"
      expression: "input > this"
      jsonschemas: '{ "exclusiveMinimum": this }'
    }];
    float gte = 2 [(predefined).cel = {
      message: "value must be greater than or equal to `{this}`"
      expression: "input >= this"
      jsonschemas: '{ "minimum": this }'
    }];
  }

  oneof less {
    float lt = 3 [(predefined).cel = {
      message: "value must be less than `{this}`"
      expression: "input < this"
      jsonschemas: '{ "exclusiveMaximum": this }'
    }];
    float lte = 4 [(predefined).cel = {
      message: "value must be less than or equal to {this}"
      expression: "input <= this"
      jsonschemas: '{ "maximum": this }'
    }];
  }

  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated float in = 5 [(predefined).cel = {
    message: "value must be one of `{this}`"
    expression: "this.contains(input)"
    jsonschemas: '{ "enum": this }'
  }];
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated float not_in = 6 [(predefined).cel = {
    message: "value must not be one of `{this}`"
    expression: "!this.contains(input)"
    jsonschemas: '{ "not": { "enum": this }}'
  }];
  optional bool finite = 7 [(predefined).cel = {
    message: "value must be finite"
    expression: "!this || input.is_finite()"
  }];
  optional float const = 8 [(predefined).cel = {
    message: "value must be equal to `{this}`"
    expression: "input == this"
    jsonschemas: '{ "const": this }'
  }];
}

message DoubleConstraint {
  oneof greater {
    double gt = 1 [(predefined).cel = {
      message: "value must be greater than `{this}`"
      expression: "input > this"
      jsonschemas: '{ "exclusiveMinimum": this }'
    }];
    double gte = 2 [(predefined).cel = {
      message: "value must be greater than or equal to `{this}`"
      expression: "input >= this"
      jsonschemas: '{ "minimum": this }'
    }];
  }

  oneof less {
    double lt = 3 [(predefined).cel = {
      message: "value must be less than `{this}`"
      expression: "input < this"
      jsonschemas: '{ "exclusiveMaximum": this }'
    }];
    double lte = 4 [(predefined).cel = {
      message: "value must be less than or equal to `{this}`"
      expression: "input <= this"
      jsonschemas: '{ "maximum": this }'
    }];
  }

  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated double in = 5 [(predefined).cel = {
    message: "value must be one of `{this}`"
    expression: "this.contains(input)"
    jsonschemas: '{ "enum": this }'
  }];
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated double not_in = 6 [(predefined).cel = {
    message: "value must not be one of `{this}`"
    expression: "!this.contains(input)"
    jsonschemas: '{ "not": { "enum": this }}'
  }];
  optional bool finite = 7 [(predefined).cel = {
    message: "value must be finite"
    expression: "!this || input.is_finite()"
  }];
  optional double const = 8 [(predefined).cel = {
    message: "value must be equal to `{this}`"
    expression: "input == this"
    jsonschemas: '{ "const": this }'
  }];
}

message Int32Constraints {
  oneof greater {
    int32 gt = 1 [(predefined).cel = {
      message: "value must be greater than `{this}`"
      expression: "input > this"
      jsonschemas: '{ "exclusiveMinimum": this }'
    }];
    int32 gte = 2 [(predefined).cel = {
      message: "value must be greater than or equal to `{this}`"
      expression: "input >= this"
      jsonschemas: '{ "minimum": this }'
    }];
  }

  oneof less {
    int32 lt = 3 [(predefined).cel = {
      message: "value must be less than `{this}`"
      expression: "input < this"
      jsonschemas: '{ "exclusiveMaximum": this }'
    }];
    int32 lte = 4 [(predefined).cel = {
      message: "value must be less than or equal to `{this}`"
      expression: "input <= this"
      jsonschemas: '{ "maximum": this }'
    }];
  }
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated int32 in = 5 [(predefined).cel = {
    message: "value must be one of `{this}`"
    expression: "this.contains(input)"
    jsonschemas: '{ "enum": this }'
  }];
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated int32 not_in = 6 [(predefined).cel = {
    message: "value must not be one of `{this}`"
    expression: "!this.contains(input)"
    jsonschemas: '{ "not": { "enum": this }}'
  }];
  optional int32 const = 8 [(predefined).cel = {
    message: "value must be equal to `{this}`"
    expression: "input == this"
    jsonschemas: '{ "const": this }'
  }];
}

message Int64Constraints {
  oneof greater {
    int64 gt = 1 [(predefined).cel = {
      message: "value must be greater than `{this}`"
      expression: "input > this"
      jsonschemas: '{ "exclusiveMinimum": this }'
    }];
    int64 gte = 2 [(predefined).cel = {
      message: "value must be greater than or equal to `{this}`"
      expression: "input >= this"
      jsonschemas: '{ "minimum": this }'
    }];
  }

  oneof less {
    int64 lt = 3 [(predefined).cel = {
      message: "value must be less than `{this}`"
      expression: "input < this"
      jsonschemas: '{ "exclusiveMaximum": this }'
    }];
    int64 lte = 4 [(predefined).cel = {
      message: "value must be less than or equal to `{this}`"
      expression: "input <= this"
      jsonschemas: '{ "maximum": this }'
    }];
  }
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated int64 in = 5 [(predefined).cel = {
    message: "value must be one of `{this}`"
    expression: "this.contains(input)"
    jsonschemas: '{ "enum": this }'
  }];
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated int64 not_in = 6 [(predefined).cel = {
    message: "value must not be one of `{this}`"
    expression: "!this.contains(input)"
    jsonschemas: '{ "not": { "enum": this }}'
  }];
  optional int64 const = 8 [(predefined).cel = {
    message: "value must be equal to `{this}`"
    expression: "input == this"
    jsonschemas: '{ "const": this }'
  }];
}

message UInt32Constraints {
  oneof greater {
    uint32 gt = 1 [(predefined).cel = {
      message: "value must be greater than `{this}`"
      expression: "input > this"
      jsonschemas: '{ "exclusiveMinimum": this }'
    }];
    uint32 gte = 2 [(predefined).cel = {
      message: "value must be greater than or equal to `{this}`"
      expression: "input >= this"
      jsonschemas: '{ "minimum": this }'
    }];
  }

  oneof less {
    uint32 lt = 3 [(predefined).cel = {
      message: "value must be less than `{this}`"
      expression: "input < this"
      jsonschemas: '{ "exclusiveMaximum": this }'
    }];
    uint32 lte = 4 [(predefined).cel = {
      message: "value must be less than or equal to `{this}`"
      expression: "input <= this"
      jsonschemas: '{ "maximum": this }'
    }];
  }
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated uint32 in = 5 [(predefined).cel = {
    message: "value must be one of `{this}`"
    expression: "this.contains(input)"
    jsonschemas: '{ "enum": this }'
  }];
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated uint32 not_in = 6 [(predefined).cel = {
    message: "value must not be one of `{this}`"
    expression: "!this.contains(input)"
    jsonschemas: '{ "not": { "enum": this }}'
  }];
  optional uint32 const = 8 [(predefined).cel = {
    message: "value must be equal to `{this}`"
    expression: "input == this"
    jsonschemas: '{ "const": this }'
  }];
}

message UInt64Constraints {
  oneof greater {
    int64 gt = 1 [(predefined).cel = {
      message: "value must be greater than `{this}`"
      expression: "input > this"
      jsonschemas: '{ "exclusiveMinimum": this }'
    }];
    uint64 gte = 2 [(predefined).cel = {
      message: "value must be greater than or equal to `{this}`"
      expression: "input >= this"
      jsonschemas: '{ "minimum": this }'
    }];
  }

  oneof less {
    uint64 lt = 3 [(predefined).cel = {
      message: "value must be less than `{this}`"
      expression: "input < this"
      jsonschemas: '{ "exclusiveMaximum": this }'
    }];
    uint64 lte = 4 [(predefined).cel = {
      message: "value must be less than or equal to `{this}`"
      expression: "input <= this"
      jsonschemas: '{ "maximum": this }'
    }];
  }
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated uint64 in = 5 [(predefined).cel = {
    message: "value must be one of `{this}`"
    expression: "this.contains(input)"
    jsonschemas: '{ "enum": this }'
  }];
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated uint64 not_in = 6 [(predefined).cel = {
    message: "value must not be one of `{this}`"
    expression: "!this.contains(input)"
    jsonschemas: '{ "not": { "enum": this }}'
  }];
  optional uint64 const = 8 [(predefined).cel = {
    message: "value must be equal to `{this}`"
    expression: "input == this"
    jsonschemas: '{ "const": this }'
  }];
}

message StringConstraints {
  optional string const = 1 [(predefined).cel = {
    message: "value must equal `{this}`"
    expression: "input == this"
    jsonschemas: '{"const": this }'
  }];
  optional uint64 len = 2 [(predefined).cel = {
    message: "value must be exactly `{this}` characters long"
    expression: "input.size() == this"
    jsonschemas: '{ "maxLength": this }'
    jsonschemas: '{ "minLength": this }'
  }];
  optional uint64 min_len = 3 [(predefined).cel = {
    message: "value must be at least `{this}` characters long"
    expression: "input.size() >= this"
    jsonschemas: '{ "minLength": this }'
  }];
  optional uint64 max_len = 4 [(predefined).cel = {
    message: "value must be at most `{this}` characters long"
    expression: "input.size() <= this"
    jsonschemas: '{ "maxLength": this }'
  }];
  optional string match = 5 [(predefined).cel = {
    message: "value must match the pattern `{this}`"
    expression: "input.matches(this)"
    jsonschemas: '{ "pattern": this }'
  }];
  optional string not_match = 6 [(predefined).cel = {
    message: "value must not match the pattern `{this}`"
    expression: "!(input.matches(this))"
    jsonschemas: '{ "not": { "pattern": this }}'
  }];
  optional string prefix = 7 [(predefined).cel = {
    message: "value must start with `{this}`"
    expression: "input.startsWith(this)"
    jsonschemas: '{ "pattern": "^" + this }'
  }];
  optional string suffix = 8 [(predefined).cel = {
    message: "value must end with `{this}`"
    expression: "input.endsWith(this)"
    jsonschemas: '{ "pattern": this + "$" }'
  }];
  optional string contains = 9 [(predefined).cel = {
    message: "value must contain `{this}`"
    expression: "input.contains(this)"
    jsonschemas: '{ "pattern": this }'
  }];
  optional string not_contains = 10 [(predefined).cel = {
    message: "value must not contain `{this}`"
    expression: "!input.contains(this)"
    jsonschemas: '{ "not": { "pattern": this }}'
  }];
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated string in = 11 [(predefined).cel = {
    message: "value must be one of `{this}`"
    expression: "this.contains(input)"
    jsonschemas: '{ "enum": this }'
  }];
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated string not_in = 12 [(predefined).cel = {
    message: "value must not be one of `{this}`"
    expression: "!this.contains(input)"
    jsonschemas: '{ "not": { "enum": this }}'
  }];
  oneof well_known {
    bool email = 13 [(predefined).cel = {
      message: "value must be a valid email address"
      expression: "!this || input.isEmail()"
      jsonschemas: 'this ? { "format": "email" } : {}'
    }];
  }
}

message BytesConstraints {
  optional bytes const = 1 [(predefined).cel = {
    message: "value must equal `{this}`"
    expression: "input == this"
    jsonschemas: '{"const": this }'
  }];
  optional uint64 len = 2 [(predefined).cel = {
    message: "value must be exactly `{this}` bytes long"
    expression: "input.size() == this"
    jsonschemas: '{ "minLength": this }'
    jsonschemas: '{ "maxLength": this }'
  }];
  optional uint64 min_len = 3 [(predefined).cel = {
    message: "value must be at least `{this}` bytes long"
    expression: "input.size() >= this"
    jsonschemas: '{ "minLength": this }'
  }];
  optional uint64 max_len = 4 [(predefined).cel = {
    message: "value must be at most `{this}` bytes long"
    expression: "input.size() <= this"
    jsonschemas: '{ "maxLength": this }'
  }];
}

message EnumConstraints {
  optional int32 const = 1 [(predefined).cel = {
    message: "value must be equal to `{this.enum()}`"
    expression: "input == this"
    jsonschemas: '{ "const": this.enum() }'
  }];
  optional bool defined = 2 [(predefined).cel = {
    message: "value must be defined in the enum"
    expression: "!this || input.enum() != null"
  }];
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated int32 in = 3 [(predefined).cel = {
    message: "value must be one of `{this.map(e, e.enum())}`"
    expression: "this.contains(input)"
    jsonschemas: '{ "enum": this.map(e, e.enum()) }'
  }];
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated int32 not_in = 4 [(predefined).cel = {
    message: "value must not be one of `{this.map(e, e.enum())}`"
    expression: "!this.contains(input)"
    jsonschemas: '{ "not": { "enum": this.map(e, e.enum()) }}'
  }];
}

message RepeatedConstraints {
  optional uint64 min_len = 1 [(predefined).cel = {
    message: "value must have at least `{this}` elements"
    expression: "input.size() >= this"
    jsonschemas: '{ "minItems": this }'
  }];
  optional uint64 max_len = 2 [(predefined).cel = {
    message: "value must have at most `{this}` elements"
    expression: "input.size() <= this"
    jsonschemas: '{ "maxItems": this }'
  }];
  optional uint64 len = 3 [(predefined).cel = {
    message: "value must have exactly `{this}` elements"
    expression: "input.size() == this"
    jsonschemas: '{ "maxItems": this }'
    jsonschemas: '{ "minItems": this }'
  }];
  optional bool unique = 4 [(predefined).cel = {
    message: "value must be unique"
    expression: "!this || input.isUnique()"
    jsonschemas: 'this ? { "uniqueItems": this } : {}'
  }];
  optional PrimitiveConstraints items = 5 [
    (predefined).type = WRAPPER_REPEATED_ITEM
  ];
}

enum Ignore {
  IGNORE_UNSPECIFIED = 0;
  ALWAYS = 1;
  DEFAULT = 2;
}

message MapConstraints {
  optional uint64 min_len = 1 [(predefined).cel = {
    message: "value must have at least `{this}` elements"
    expression: "input.size() >= this"
    jsonschemas: '{ "minProperties": this }'
  }];
  optional uint64 max_len = 2 [(predefined).cel = {
    message: "value must have at most `{this}` elements"
    expression: "input.size() <= this"
    jsonschemas: '{ "maxProperties": this }'
  }];
  optional uint64 len = 3 [(predefined).cel = {
    message: "value must have exactly `{this}` elements"
    expression: "input.size() == this"
    jsonschemas: '{ "minProperties": this }'
    jsonschemas: '{ "maxProperties": this }'
  }];

  message MapKeyConstraints {
    oneof constraint {
      Int32Constraints int32 = 1;
      Int64Constraints int64 = 2;
      UInt32Constraints uint32 = 3;
      UInt64Constraints uint64 = 4;
      StringConstraints string = 5;
      // EnumConstraints enum = 6;
    }
    optional Ignore ignore = 7;
    //protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
    repeated CelExpression cel = 8 [
      (predefined).type = CUSTOM_EXPRESSION
    ];
  }

  optional MapKeyConstraints key = 4 [
    (predefined).type = WRAPPER_MAP_KEY
  ];
  optional PrimitiveConstraints value = 5 [
    (predefined).type = WRAPPER_MAP_VALUE
  ];
}

message PrimitiveConstraints {
  oneof constraint {
    FloatConstraint float = 1;
    DoubleConstraint double = 2;
    Int32Constraints int32 = 3;
    Int64Constraints int64 = 4;
    UInt32Constraints uint32 = 5;
    UInt64Constraints uint64 = 6;
    StringConstraints string = 7;
    BytesConstraints bytes = 8;
    EnumConstraints enum = 9;
  }
  optional Ignore ignore = 10;
  //protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated CelExpression cel = 11 [
      (predefined).type = CUSTOM_EXPRESSION
    ];
}

message FieldConstraints {
  oneof constraint {
    FloatConstraint float = 1;
    DoubleConstraint double = 2;
    Int32Constraints int32 = 3;
    Int64Constraints int64 = 4;
    UInt32Constraints uint32 = 5;
    UInt64Constraints uint64 = 6;
    StringConstraints string = 7;
    BytesConstraints bytes = 8;
    EnumConstraints enum = 9;
    RepeatedConstraints repeated = 10;
    MapConstraints map = 11;
  }
  optional Ignore ignore = 12;
  //protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated CelExpression cel = 13 [
    (predefined).type = CUSTOM_EXPRESSION
  ];
}

message CelExpression {
  string message = 2;
  string expression = 3;
  message Variable {
    string name = 1;
    string rust_path = 2;
  }
  repeated string jsonschemas = 5;
}

message SchemaEnumOptions {
  optional bool repr_enum = 2;
  optional RenameAll rename_all = 3;
}

message SchemaVariantOptions {
  optional string rename = 1;
  optional Visibility visibility = 2;
}

message HttpEndpointOptions {
  // A custom HTTP method.
  message CustomMethod {
    // HTTP method
    string method = 1;
    // Path parameters can be specified using `{param}` syntax.
    string path = 2;
  }

  // HTTP method - Path parameters can be specified using `{param}` syntax.
  oneof method {
    // GET method
    string get = 1;
    // POST method
    string post = 2;
    // PUT method
    string put = 3;
    // DELETE method
    string delete = 4;
    // PATCH method
    string patch = 5;
    // Custom method
    CustomMethod custom = 6;
  }

  message RequestBody {
    string field = 1;
    string content_type_field = 2;
  }

  message QueryParams {
    string field = 1;
  }

  // The default input for `GET` and `DELETE` methods is `query`
  // where field is empty denoting the message itthis.
  // Otherwise the default is `body` where field is empty denoting
  // the message itthis. Content-type by default is not saved in the message.
  oneof input {
    RequestBody body = 7;
    QueryParams query = 8;
  }

  message Response {
    string field = 1;
    string content_type_field = 2;
  }

  Response response = 9;

  //protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  // Custom expressions evaluated on the incoming request
  // specific for this endpoint.
  repeated CelExpression cel = 10;
}

message SchemaOneofOptions {
  optional string rename = 1;
  optional RenameAll rename_all = 4;
  // Deserialization:
  // This flag dictates how we handle fields which are
  // not provided in the json representation of the message.
  // If this is true, then no error will be returned
  // if the field is not provided.
  // If this is false then not providing a value for this field
  // will result in an error.
  // The default setting for this flag is `true` if the field
  // is marked as `optional` and `false` otherwise.
  // Meaning that optional fields can be omitted from the json
  // representation of the message without causing an error.
  //
  // Serialization:
  // This flag dictates if we should skip serializing the field
  // in the json representation of the message if the field
  // is equal to the default value for its type.
  // The default setting for this flag is `true` if the field
  // is marked as `optional` and `false` otherwise.
  // Meaning that optional fields will be omitted from the json
  // if they do not have a value.
  JsonOmittable json_omittable = 200;
  // This flag dictates if the field is nullable or not.
  // By default oneof fields are not nullable.
  optional bool optional = 6;
  optional Visibility visibility = 202;

  message Tagged {
    string tag = 1;
    string content = 2;
  }

  optional Tagged tagged = 100;
  optional bool flatten = 101;
}
