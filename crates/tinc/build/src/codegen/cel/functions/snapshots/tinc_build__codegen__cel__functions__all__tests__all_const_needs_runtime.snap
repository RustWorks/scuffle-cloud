---
source: crates/tinc/build/src/codegen/cel/functions/all.rs
expression: result
---
Runtime(
    RuntimeCompiledExpr {
        ty: Proto(
            Value(
                Bool,
            ),
        ),
        expr: {
            let mut iter = ([
                ::tinc::__private::cel::to_bool(
                    match ::tinc::__private::cel::CelMode::current() {
                        ::tinc::__private::cel::CelMode::Json => {
                            ::tinc::__private::cel::CelValueConv::conv("FirstValue")
                        }
                        ::tinc::__private::cel::CelMode::Proto => {
                            ::tinc::__private::cel::CelValueConv::conv("FIRST_VALUE")
                        }
                    },
                ),
            ])
                .into_iter();
            loop {
                let Some(item) = iter.next() else {
                    break true;
                };
                if !(item) {
                    break false;
                }
            }
        },
    },
)
